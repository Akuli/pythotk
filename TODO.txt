create_command
delete_command
on_quit
update

grid
place


make threading stuff faster, this is slow:

    import threading
    import pythotk

    pythotk.init_threads()
    text = pythotk.Text(pythotk.Window())
    text.pack()

    def inserter():
        i = 0
        while True:
            i += 1
            text.insert(text.end, 'hello %d\n' % i)
            #pythotk.call(None, text, 'insert', 'end - 1 char', 'hello %d\n' % i)

    threading.Thread(target=inserter).start()
    pythotk.run()

because text.insert and text.end end up in the queue as separate items, which
is a problem because this is a particularly common way to use things in a
thread... maybe add an insert_to_end method?
